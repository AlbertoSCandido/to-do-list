{"version":3,"sources":["context/index.js","context/GloblalContext.jsx","components/TaskList.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["context","createContext","GloblalContext","children","React","useState","list","setList","doneTasks","setDoneTasks","selectedTask","setSelectedTask","state","addItem","item","task","trim","changeDoneTask","newDoneTasks","includes","filter","taskId","deleteDoneTasks","id","deleteAllTasks","Provider","value","TaskList","useContext","setTaskId","taskText","setTaskText","updateTask","map","editedTask","className","length","type","onChange","e","target","onKeyPress","key","onClick","Home","setTask","addTask","Date","now","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89b101f3.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst context = createContext();\n\nexport default context;\n","import React from 'react';\nimport context from '.';\n\nconst GloblalContext = ({ children }) => {\n  const [list, setList] = React.useState([]);\n  const [doneTasks, setDoneTasks] = React.useState([]);\n  const [selectedTask, setSelectedTask] = React.useState(null);\n\n  const addItem = (item) => {\n    if (item.task.trim() !== '') {\n      setList([...list, item]);\n    }\n  };\n\n  const deleteAllTasks = () => {\n    setList([]);\n    setDoneTasks([]);\n  }\n\n  const deleteDoneTasks = () => {\n    setList(list.filter(({id}) => !doneTasks.includes(id)));\n    setDoneTasks([]);\n  }\n\n  const changeDoneTask = () => {\n    const newDoneTasks = doneTasks.includes(selectedTask)\n      ? doneTasks.filter(taskId => taskId !== selectedTask)\n      : [...doneTasks, selectedTask];\n\n    setDoneTasks(newDoneTasks);\n    setSelectedTask(null);\n  }\n\n  const state = {\n    addItem,\n    list,\n    setList,\n    selectedTask,\n    setSelectedTask,\n    doneTasks,\n    changeDoneTask,\n    deleteDoneTasks,\n    deleteAllTasks,\n  };\n\n  return (\n    <context.Provider value={state}>\n      {children}\n    </context.Provider>\n  );\n}\n\nexport default GloblalContext;\n","import React from 'react';\nimport context from '../context';\n\nconst TaskList = () => {\n  const { list,\n    setList,\n    selectedTask,\n    setSelectedTask,\n    doneTasks,\n  } = React.useContext(context);\n\n  const [taskId, setTaskId] = React.useState(null);\n  const [taskText, setTaskText] = React.useState(null);\n\n  const updateTask = () => {\n    setList(list.map((task) => {\n      if (task.id === taskId) {\n        const editedTask = task;\n        editedTask.task = taskText;\n        return editedTask;\n      }\n      return task;\n    }));\n    setTaskId(null);\n    setSelectedTask(null);\n  }\n\n\n  return (\n    <div className='taskList p-1 d-flex f-d-column'>\n      <h3 className=\"d-flex j-c-spAround a-i-center\"><h2>{list.length} tasks</h2> {list.length - doneTasks.length} remain</h3>\n      { list.map(({ id, task }) => {\n        return taskId === id ? (\n          <div className=\"d-flex j-c-spBetween a-i-center m-x-2\">\n            <input\n              type=\"text\"\n              value={taskText}\n              onChange={(e) => setTaskText(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && updateTask()}\n              className=\"input-edt\"\n            />\n            <div>\n              <button className=\"btn-task\" onClick={ updateTask }>Save</button>\n              <button className=\"btn-task\" onClick={() => {setTaskId(null)}}>Cancel</button>\n            </div>\n          </div>\n        ) : (\n          <div\n            key={id}\n            className={ `${id === selectedTask ? 'selected' : ''} ${doneTasks.includes(id) ? 'doneTask': ''} d-flex j-c-spBetween a-i-center m-x-2 f-wrap` }\n            onClick={() => { selectedTask === id ? setSelectedTask(null) : setSelectedTask(id) }}\n          >\n            <p>{task}</p>\n            <div className=\"s-c-end\">\n              <button type=\"button\" className=\"btn-task\" onClick={() => { setTaskId(id); setTaskText(task) } }>Edit</button>\n              <button type=\"button\" className=\"btn-task\" onClick={() => { setList(list.filter((task) => task.id !== id)) }}>Delete</button>\n            </div>\n          </div>\n        )\n      }\n      ) }\n\n    </div>\n  )\n}\n\nexport default TaskList;\n","import React from 'react'\nimport TaskList from '../components/TaskList';\nimport context from '../context';\n\nconst Home = () => {\n  const { \n    addItem,\n    changeDoneTask,\n    deleteDoneTasks,\n    deleteAllTasks,\n  } = React.useContext(context);\n  const [task, setTask] = React.useState({task: '', id: ''});\n\n  const addTask = () => {\n    addItem(task)\n    setTask({task: '', id: ''})\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"d-flex f-d-column a-i-center gap-1\">\n        <h1 className=\"title\">To-do List &#x02713;</h1>\n        <div>\n          <input\n            type=\"text\"\n            value={task.task}\n            className=\"inputTask\"\n            onChange={e => setTask({ task: e.target.value, id: Date.now() })}\n            onKeyPress={e => e.key === 'Enter' && addTask()}\n          />\n          <button type=\"button\" className=\"btn add-btn\" onClick={ addTask }>Add task</button>\n        </div>\n        <div>\n        <button type=\"button\" className=\"btn danger\" onClick={ changeDoneTask}>Finish / Unfinish</button>\n        <button type=\"button\" className=\"btn danger\" onClick={ deleteDoneTasks }>Remove Done Tasks</button>\n        <button type=\"button\" className=\"btn danger\" onClick={ deleteAllTasks }>Clear Tasks</button>\n        </div>\n      </div>\n      <TaskList />\n    </div>\n  );\n}\n\nexport default Home\n","import './App.css';\nimport GloblalContext from './context/GloblalContext';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <GloblalContext>\n      <Home />\n    </GloblalContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}